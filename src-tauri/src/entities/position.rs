//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Default,Clone, Debug, PartialEq, DeriveEntityModel,Serialize)]
#[sea_orm(table_name = "position")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub date: String,
    ///当前仓位
    pub position: f64,
    ///上证指数，代码缩写：sh
    pub sh: f64,
    ///深证成指，代码缩写：sz
    pub sz: f64,
    ///创业板指，拼音缩写：cyb
    pub cyb: f64,
    ///上证50，拼音缩写：sz50
    pub sz50: f64,
    ///沪深300指数，拼音缩写：hs300
    pub hs300: f64,
    ///中证500指数，拼音缩写：zz500
    pub zz500: f64,
}
impl Model {
    pub fn new(date: String, position: f64) -> Self {
        Self {
            date,
            position,
            ..Self::default()
        }
    }
    pub fn set_field(&mut self, field: &str, value: f64) -> &mut Self {
        match field {
            "sh" => { self.sh = value;self },
            "sz" => { self.sz = value;self },
            "cyb" => {self.cyb = value;self},
            "sz50" => {self.sz50 = value;self},
            "hs300" => {self.hs300 = value;self},
            "zz500" => {self.zz500 = value;self},
            _ => panic!("No such field: {}", field),
        }
    }
}
#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation { }

impl ActiveModelBehavior for ActiveModel {}
